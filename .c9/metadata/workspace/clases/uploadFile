{"changed":true,"filter":false,"title":"uploadFile","tooltip":"/clases/uploadFile","value":"<?php\nclass FileUpload {\n    private $destino=\"./\", $nombre=\"as\", $tamaño=1000000, $parametro;\n    private $error = false, $politica = self::RENOMBRAR; // self es de la clase\n    const CONSERVAR = 1, REEMPLAZAR = 2, RENOMBRAR = 3; \n    // tipo y archivos\n    \n    private $arrayDeTipos =array(\n        \"jpg\"=>1,\n        \"gif\"=>1,\n        \"png\"=>1,\n        \"jpeg\"=>1,\n        \"mp3\"=>1\n        );\n    private $extension;\n    \n    function __construct($parametro) {\n        //var_dump($_FILES[$parametro]);\n        if(isset($_FILES[$parametro]) && $_FILES[$parametro][\"name\"]!==\"\" ){\n            $this -> parametro = $parametro;\n            $nombre = $_FILES[$this->parametro][\"name\"];\n            $trozos = pathinfo($nombre); //array\n            $extension = $trozos[\"extension\"];\n            $this->nombre = $trozos[\"filename\"];\n            $this->extension =  $extension;\n        }else{\n            $this->error=true;\n        }\n    }\n    \n    public function getDestino() {\n        return $this->destino;\n    }\n    public function getNombre() {\n        return $this->nombre;\n    } \n    public function getTamaño() {\n        return $this->tamaño;\n    }\n    \n    public function getPolitica() {\n        return $this->politica;\n    }\n    public function setDestino($destino) {\n        $this->destino = $destino;\n    }\n    public function setNombre($nombre) {\n        $this->nombre = $nombre;\n    }\n    public function setTamaño($tamaño) {\n        $this->tamaño = $tamaño;\n    }\n    \n    public function setPolitica($politica) {\n        $this->politica = $politica;\n    }\n   \n    public function upload(){\n        if($this->error){\n            return false;\n        }\n        if($_FILES[$this->parametro][\"error\"]!=UPLOAD_ERR_OK){\n            return false;\n        }\n        if($_FILES[$this->parametro][\"size\"]>$this->tamaño){\n            return false;\n        }\n        \n        if(!$this->isTipo($this->extension)){\n            return false;\n        }\n        \n        if(!(is_dir($this->destino) && substr($this->destino, -1) === \"/\")){\n            return false;\n        }\n        \n        if($this->politica === self::CONSERVAR \n                && file_exists($this->destino.$this->nombre.\".\".$this->extension)){\n            return false;\n        }\n        $nombre = $this->nombre;\n        if($this->politica === self::RENOMBRAR\n                && file_exists($this->destino.$this->nombre.\".\".$this->extension)){\n            $nombre = $this->renombrar($nombre);\n        }\n        \n        return move_uploaded_file($_FILES[$this->parametro][\"tmp_name\"], \n                $this->destino.$nombre.\".\".$this->extension);\n    }\n    \n    private function renombrar($nombre){\n        $i=1;\n        while(file_exists($this->destino.$nombre.\"_\".$i.\".\".$this->extension)){\n            $i++;\n        }\n        return $nombre . \"_\" . $i;\n    }\n    \n    public function addTipo($tipo){\n        if(!$this->isTipo($tipo)){\n             $this->arrayDeTipos[$tipo]=1;\n            return true;\n        }\n        return false;   \n    }\n    \n    public function removeTipo($tipo){\n        if($this->isTipo($tipo)){\n            unset($this->arrayDeTipos[$tipo]);\n            return true;\n        }\n        return false;\n    }\n    \n    public function isTipo($tipo){\n        return isset($this->arrayDeTipos[$tipo]);\n    }\n    \n}","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":118,"column":1},"action":"insert","lines":["<?php","class FileUpload {","    private $destino=\"./\", $nombre=\"as\", $tamaño=1000000, $parametro;","    private $error = false, $politica = self::RENOMBRAR; // self es de la clase","    const CONSERVAR = 1, REEMPLAZAR = 2, RENOMBRAR = 3; ","    // tipo y archivos","    ","    private $arrayDeTipos =array(","        \"jpg\"=>1,","        \"gif\"=>1,","        \"png\"=>1,","        \"jpeg\"=>1,","        \"mp3\"=>1","        );","    private $extension;","    ","    function __construct($parametro) {","        //var_dump($_FILES[$parametro]);","        if(isset($_FILES[$parametro]) && $_FILES[$parametro][\"name\"]!==\"\" ){","            $this -> parametro = $parametro;","            $nombre = $_FILES[$this->parametro][\"name\"];","            $trozos = pathinfo($nombre); //array","            $extension = $trozos[\"extension\"];","            $this->nombre = $trozos[\"filename\"];","            $this->extension =  $extension;","        }else{","            $this->error=true;","        }","    }","    ","    public function getDestino() {","        return $this->destino;","    }","    public function getNombre() {","        return $this->nombre;","    } ","    public function getTamaño() {","        return $this->tamaño;","    }","    ","    public function getPolitica() {","        return $this->politica;","    }","    public function setDestino($destino) {","        $this->destino = $destino;","    }","    public function setNombre($nombre) {","        $this->nombre = $nombre;","    }","    public function setTamaño($tamaño) {","        $this->tamaño = $tamaño;","    }","    ","    public function setPolitica($politica) {","        $this->politica = $politica;","    }","   ","    public function upload(){","        if($this->error){","            return false;","        }","        if($_FILES[$this->parametro][\"error\"]!=UPLOAD_ERR_OK){","            return false;","        }","        if($_FILES[$this->parametro][\"size\"]>$this->tamaño){","            return false;","        }","        ","        if(!$this->isTipo($this->extension)){","            return false;","        }","        ","        if(!(is_dir($this->destino) && substr($this->destino, -1) === \"/\")){","            return false;","        }","        ","        if($this->politica === self::CONSERVAR ","                && file_exists($this->destino.$this->nombre.\".\".$this->extension)){","            return false;","        }","        $nombre = $this->nombre;","        if($this->politica === self::RENOMBRAR","                && file_exists($this->destino.$this->nombre.\".\".$this->extension)){","            $nombre = $this->renombrar($nombre);","        }","        ","        return move_uploaded_file($_FILES[$this->parametro][\"tmp_name\"], ","                $this->destino.$nombre.\".\".$this->extension);","    }","    ","    private function renombrar($nombre){","        $i=1;","        while(file_exists($this->destino.$nombre.\"_\".$i.\".\".$this->extension)){","            $i++;","        }","        return $nombre . \"_\" . $i;","    }","    ","    public function addTipo($tipo){","        if(!$this->isTipo($tipo)){","             $this->arrayDeTipos[$tipo]=1;","            return true;","        }","        return false;   ","    }","    ","    public function removeTipo($tipo){","        if($this->isTipo($tipo)){","            unset($this->arrayDeTipos[$tipo]);","            return true;","        }","        return false;","    }","    ","    public function isTipo($tipo){","        return isset($this->arrayDeTipos[$tipo]);","    }","    ","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":1,"column":6},"end":{"row":1,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1452888329809}